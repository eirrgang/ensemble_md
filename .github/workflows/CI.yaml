name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  push:
    branches:
      - "master"
      - "main"
  pull_request:
    branches:
      - "master"
      - "main"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:   # tests for ubuntu 
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        channels: conda-forge,bioconda,defaults
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true

    - name: Prepare OS 
      run: |
        sudo apt-get update
        sudo apt install build-essential
        sudo apt-get install ccache libblas-dev libfftw3-dev liblapack-dev libmpich-dev libxml2-dev mpich ninja-build

    - name: Install the latest GROMACS and gmxpi
      shell: bash -l {0}
      run: |
        gcc --version
        g++ --version 
        export CC=`which gcc`
        export CXX=`which g++`

        cd $HOME && mkdir pkgs
        wget ftp://ftp.gromacs.org/gromacs/gromacs-2023-rc1.tar.gz
        tar xvf gromacs-2023-rc1.tar.gz
        cd gromacs-2023-rc1 && mkdir build && cd build
        cmake .. -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_INSTALL_PREFIX=$HOME/pkgs
        make install 
        source $HOME/pkgs/bin/GMXRC
        gmx --version
        
        source $HOME/pkgs/bin/GMXRC
        python -m ensurepip --default-pip
        pip install --upgrade pip setuptools wheel
        pip install --upgrade cmake pybind11
        python -m pip install --upgrade pip setuptools
        pip install --upgrade mpi4py
        cd ../python_packaging/gmxapi
        RDMAV_FORK_SAFE=1 pip install --verbose .
        python -c "import gmxapi; print(gmxapi.__version__)"

    - name: Install ensemble_md dependencies
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        conda list

    - name: Run tests

      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        pip install pytest 
        pip install pytest-cov
        pytest -vv --disable-pytest-warnings --cov=ensemble_md --cov-report=xml --color=yes ensemble_md/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
        fail_ci_if_error: false
